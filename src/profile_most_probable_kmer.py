__author__ = 'nikita_kartashov'

from utils.bioutils import all_possible_kmers_from_text
from utils.pyutils import product, top_by_snd_and_ignore, transpose, fst

NUCLEOTIDES_FOR_PROBABILITIES = ['A', 'C', 'G', 'T']


def nucleotide_to_index(nucleotide):
    return NUCLEOTIDES_FOR_PROBABILITIES.index(nucleotide)


def probability_score(kmer, probabilities):
    return product(probabilities[nucleotide_index][NUCLEOTIDES_FOR_PROBABILITIES.index(nucleotide)]
                   for nucleotide_index, nucleotide in enumerate(kmer))


def most_probable_kmer(dna_string, k, probabilities):
    all_kmers = all_possible_kmers_from_text(dna_string, k)
    return fst(top_by_snd_and_ignore(list((kmer, probability_score(kmer, probabilities))
                                          for kmer in all_kmers), descending=True))


if __name__ == '__main__':
    DNA_STRING = 'TCGTTATCAGCTTGCGTAACCAATGACCCCTGGTCTGGTTTCCGCACTTCCCGAACCTGCAACTAATGCTAATTATCAGGATGGTCGTGGTATCCAGCTCTACAAGTCCCAGGCCACCAGGTGGGAGATGCGTCTCGACATTCACTTGGGTGCGCCTACCGCCTCGAGTGGTCCAGCTATTAAATAGCCGAGTCCAGGAGTTTTGCCGAAACACCTTTCTGTCGCCCGCACTTACGATAATAAACCAAAACGGACGTGTATGGAGTACGGACCTACTTATTCAAGATTCTCGTGAGGAGTTAAAGTGCACCTAAGGCTCGTCACCGCTCGTATTTCACAACGTGACCCGTGAGTGGGGAAGGTAACTCGGCCGGCGAGCAAACCAAGGTTTATACCTTCAAGCGAGGGGTGACTAGCATAACATCGCTCGATTTCACATGTACCCATCTAGAGAAGAGGCCGCGGTTAAGCAAGTTGAATCCCTCGCGACCGTATGTTGTAAACGCCTGCAAGACAACAAACCGAATAATGAGGCTTATATCTCTATCGACAAGTCTCCATGATAGGCAGGATTTATGAGAGTCTATCTCACTAACCAAGTTGCACTGCGCTACACGGTCGAGACGAGGCATAGCCTTACCTGTTCGACTGCTCATTATGCGATGTATGCACTAAGTTAGAGTTTCTGGTAAATACCCAAGCCTTCCGTAATAAGGCGATTCAGTGCTTAGGTAGGCGCAGTCGTTCCCGACGTGGCGCGTCGCATAGTCGTCACAGGCTGCGGACGGTAAAGCTAAAGTTAATGGGAGTATACGGCATGCTTACGAATGGGGCGAATACGGATAAAAGCACCGATCCAAGATCTCTACGGTAATGATTCACACCGTAAGATGACCGGATTCTTGTCGACCTATACTTGGTTAAATGGGCCGCCGTCGGATTTCGGGGGTCCGTCGCGCGTCCGCTAATTAAGAGATTGATGATTCCGGCGACAGTTGTC'
    K = 13
    NUCL_PROBABILITIES = transpose(list(map(float, line.split())) for line in """0.25 0.263 0.25 0.184 0.263 0.237 0.276 0.237 0.25 0.395 0.303 0.329 0.224
0.237 0.25 0.158 0.303 0.105 0.329 0.158 0.263 0.276 0.171 0.197 0.197 0.421
0.224 0.237 0.316 0.342 0.289 0.171 0.303 0.316 0.316 0.158 0.224 0.197 0.184
0.289 0.25 0.276 0.171 0.342 0.263 0.263 0.184 0.158 0.276 0.276 0.276 0.171""".split('\n'))
    print(most_probable_kmer(DNA_STRING, K, NUCL_PROBABILITIES))
